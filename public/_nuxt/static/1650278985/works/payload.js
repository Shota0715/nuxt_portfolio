__NUXT_JSONP__("/works", (function(a,b,c,d,e,f,g,h,i,j,k,l){return {data:[{works:{contents:[{id:"vmpvvv0ybo",createdAt:c,updatedAt:d,publishedAt:c,revisedAt:d,date:e,title:"NFTマーケット制作",thumbnail:{url:"https:\u002F\u002Fimages.microcms-assets.io\u002Fassets\u002Ff908b04dc3c446f4831a5bea97247ddb\u002Fa49e943299394896841f6c7f36a6f2f2\u002Fnft.png",height:a,width:b},overview:"Nuxt.jsによるNFTを売買できるマーケットサイトの構築",system:"1、サイトにアクセス\n2、MetaMaskと連携\n\n【出品時】\n1、画像をアップロード。\n2、出品価格を決め、出品ボタン押下によりMetaMaskに登録された名義でRinkebyブロックチェーンに登録。\n3、出品時は手数料として0.025ETHがウォレットより支払われる。\n4、購入されると、出品者として登録されたウォレットアドレス宛に出品価格分のETHが振り込まれる。\n\n【購入時】\n1、購入するNFTを選択。\n2、購入ボタン押下により、連携したMetaMaskウォレットから指定ETHが支払われる。\n3、マイページを開くと、購入したNFTが追加されたことを確認できる。\n\n【売却時】\n1、所有するNFTの中から売却するNFTを選択。\n2、出品価格を決め、出品ボタン押下によりMetaMaskに登録された名義でRinkebyブロックチェーンに登録。\n3、出品時は手数料として0.025ETHがウォレットより支払われる。\n4、購入されると、出品者として登録されたウォレットアドレス宛に出品価格分のETHが振り込まれる。",term:"2022\u002F3",url:"https:\u002F\u002Fnext-nft-marketplace.vercel.app\u002F",responsibility:f,skill:"【WEB】\nフロント：Next.js, TailwindCSS\nバック　：Solidity, hardhat\nサーバー：Netlify\n\n【ブロックチェーン】\nネットワーク：Rinkeby(Testnet)\nウォレット　：MetaMask\n取扱通貨　　：ETH",tools:"【WEB】\nフロント・バック：VScode\nサーバー　　　　：Netlify\n\n【ブロックチェーン】\nネットワーク：Rinkeby(Testnet)\nウォレット　：MetaMask\n取扱通貨　　：ETH",comment:"【一言】\nポートフォリオに付随してNFTマーケットなるものを作ってみました。\n正直ブロックチェーンには疎かったのですが、今回こちらを制作してみて少しは理解できた気がします。\nMETAMASKを使用すると実際に売買出来ますので、よろしければ触ってみてくださいね(※テストネットなので実質無料です)\n\n【ポイント】\n課題点：PCだとChromeの拡張機能で自動的にMetaMaskが起動するが、モバイルだとそうはいかず面倒。\n(モバイルの場合はMetaMaskアプリからアプリ内ブラウザ→サイトを開く→連携という手順が必要)\n\n解決策：モバイルでのサイト閲覧時のみ、MetaMaskへのリンクを含んだフローティングボタンを表示する。\nこれにより、ボタンを押下→MetaMaskアプリが起動→自動連携という簡略化されたフローを実現。"},{id:"c8wtk50o6x84",createdAt:g,updatedAt:h,publishedAt:g,revisedAt:h,date:e,title:"新ポートフォリオ公開！！",thumbnail:{url:"https:\u002F\u002Fimages.microcms-assets.io\u002Fassets\u002Ff908b04dc3c446f4831a5bea97247ddb\u002Faf6161efc72544df8ba6d1f4e9b0bb8b\u002Ftop.png",height:a,width:b},overview:"Jamstackなポートフォリオの構築",system:"1、microCMSにて投稿\n2、Github Actionsでデプロイ\n3、firebase Hostingで公開",term:"2022\u002F2 ~ 2022\u002F3",url:"https:\u002F\u002Fbearsforest.net\u002F",responsibility:f,skill:"【フロント】Nuxt.js, Three.js\n【CMS】microCMS, Github Actions\n【サーバー】firebase Hosting",tools:"【フロント】VScode\n【CMS】microCMS, Github\n【サーバー】firebase",comment:"【一言】\n新しいポートフォリオを制作しました。\n折角なので最近流行りのJamstackなサイトにしようと意気込んでみた結果がこちらです。\nthree.jsや後述しますがNFTマーケットを組み込んだりして、完全に趣味が入っちゃってますね😅\nmicroCMSやNuxt.js、githubActionsなどに実際に触れてみて、その手軽さに驚いたりとすっかりWEBサイドの魅力には魅せられてしまいました。\nSwiftメインで扱ってきた私にとって、今回のWEB制作は刺激的なものになりました。\n\n【ポイント】\n"},{id:"i_k5ja2fy6",createdAt:i,updatedAt:j,publishedAt:i,revisedAt:j,date:k,title:"VOIPPush通知を用いたWEB・スマホ間のビデオ通話サービス",thumbnail:{url:"https:\u002F\u002Fimages.microcms-assets.io\u002Fassets\u002Ff908b04dc3c446f4831a5bea97247ddb\u002Fea44920c3f764cab92a435a5303f802e\u002Ftoraru.png",height:a,width:b},overview:"\"発信のみ可能なWEB\"と\n\"受信のみ可能なios、Androidアプリ\"\nの開発",system:"【環境】\n発信限定のWEB、受信限定のアプリ(ios、android)\n\n【使用時の流れ】\n１、サイトに会員登録するとメールでURLが送られてくる。\n２、URLを開くとビデオ通話のページが開き、バックエンドで発信処理が行われる。\n３、アプリ側で着信→WEBとスマホ間でビデオ通話が開始される。",term:"2021\u002F4 ~ 2022\u002F3",url:"https:\u002F\u002Ftoraru.co.jp\u002F",responsibility:"具体的な仕様の提案から始め、設計から開発まで1人で行った。",skill:"【WEB】HTML, CSS, JavaScript, Skyway, Socket.io\n【サーバー】Node.js, OneSignal, Socket.io\n【ios】Swift, CallKit, OneSignal, Socket.io\n【Android】Java, OneSignal, Socket.io",tools:"【WEB】VScode\n【サーバー】VScode, Heroku\n【ios】Xcode\n【Android】AndroidStudio",comment:"【一言】\nWEBとスマホ間のビデオ通話アプリの開発を任せていただきました。\n通話部分にはwebRTCのSkywayを利用しており、着信部分はVoipプッシュ通知でアプリを起動していなくても、着信が届くように実装しております。\n\n【ポイント】\n課題点：「呼び出し中」をどう実現するか？\n\n\n原因-1：Skywayには”呼び出し中”の機能はなく、発信した時点で相手がオフラインの場合エラーになってしまう。\n\n解決策-1：WEBで相手がオフライン時は、1秒間隔で発信処理のループを実装。\n相手がオンラインになった時もしくは30秒経ったらループを抜ける。\n\n原因-2：SkywayがWEB・スマホ間で繋がった瞬間にバックグラウンドで通話が始まってしまう。\n(スマホで着信画面表示中に「応答」・「拒否」関係なくビデオ通話が始まってしまう)\n\n解決策-2：着信画面にて「応答」・「拒否」を選択するまで「音声」と「映像」をオフにした。"},{id:"drxiy06op",createdAt:"2022-01-20T08:56:41.327Z",updatedAt:l,publishedAt:"2022-01-20T08:58:30.139Z",revisedAt:l,date:k,title:"10人と24時間だけ繋がるSNS 「Plaly」",thumbnail:{url:"https:\u002F\u002Fimages.microcms-assets.io\u002Fassets\u002Ff908b04dc3c446f4831a5bea97247ddb\u002F28d6e67cb53545db989202a20489ebea\u002Fplaly.png",height:a,width:b},overview:"既存のアプリの\n\"アップデート(機能追加含む)\"と\n\"不具合修正\"",system:"【着手当初の仕様(リリース済)】\n1日10人限定の匿名SNS\n(全ユーザーが10人ずつのグループにランダムに組み分け)\n(日付が変わったら、ランダムに再グルーピングされる)\n\n【最初にいただいた用件】\n・アンケート機能追加(ユーザーが質問を投稿、他ユーザーが回答、全体の票数の割合が見れる)\n・ログイン日時が近しいユーザーが同じグループになるようにする\n・既存の不具合修正\n\n【仕様変更後にいただいた用件】\n・大幅な仕様変更　→　1ルーム3名限定の匿名での音声通話型SNS",term:"2021\u002F5 ~ 2022\u002F3",url:"https:\u002F\u002Fsns-plaly.studio.site\u002F",responsibility:"UI以外の機能面全て(バックエンドも含む)",skill:"【ios】SwiftUI, Skyway, firebase\n【DB】firebase(firestore), CloudFunctions",tools:"【ios】Xcode",comment:"【一言】\n初めてのSNSアプリケーション開発で、未経験の部分も多々あり試行錯誤しながらの開発となりましたが、なんとか形になったかと思います。クライアント様には、仕様変更後も継続して開発をお任せしてくださり大変感謝しております。\n\n【ポイント】\n課題点：「ログイン日時が近しいユーザーが同じグループになるようにする」について例外が発生。\n(ログイン日時をDBへ記録する処理を追加したが、以前のユーザーはログイン日時が未登録のまま)\n\n解決策：ログイン日時がない全ユーザーに対して、適当なログイン日時を付与\n(cloudFunctionにて全ユーザーを読み込み、ログイン日時がなければ追加)"}],totalCount:4,offset:0,limit:10}}],fetch:{},mutations:[]}}(1080,1920,"2022-03-15T12:17:31.780Z","2022-04-18T10:20:00.391Z","2022-03-14T15:00:00.000Z","すべて","2022-03-15T11:47:46.679Z","2022-04-18T08:10:31.713Z","2022-03-31T09:24:31.415Z","2022-04-18T07:46:33.148Z","2022-03-30T15:00:00.000Z","2022-04-18T07:46:21.582Z")));